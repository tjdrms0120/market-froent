{"version":3,"sources":["HaderPage.js","config/constants.js","components/productCard.js","main/index.js","upload/index.js","product/index.js","App.js","reportWebVitals.js","index.js"],"names":["HaderPage","history","useHistory","id","to","src","size","onClick","push","icon","DownloadOutlined","API_URL","dayjs","extend","relativeTime","locale","ProductCard","props","product","className","soldout","style","color","imageUrl","name","price","seller","createdAt","fromNow","MainPage","React","useState","products","setProducts","banners","setBanners","useEffect","axios","get","then","result","data","catch","error","console","length","textAlign","paddingTop","autoplay","autoplaySpeed","map","banner","index","href","UploadPage","setImageUrl","onFinish","values","post","description","parseInt","log","replace","message","Item","label","action","listType","showUploadList","onChange","info","file","status","response","rules","required","placeholder","defaultValue","TextArea","showCount","maxLength","htmlType","ProductPage","useParams","setProduct","getProduct","format","type","danger","disabled","display","flexWrap","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a7853267.chunk.js","sourcesContent":["import { DownloadOutlined } from \"@ant-design/icons\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Button } from \"antd\";\n\n\nfunction HaderPage() {\n    const history = useHistory();\n    return (\n        <div id=\"header-area\">\n            <Link to=\"/\">\n                <img src=\"/images/icons/logo.png\" />\n            </Link>\n            <Button\n                size=\"large\"\n                onClick={function () {\n                    history.push(\"/upload\");\n                }}\n                icon={<DownloadOutlined />}\n            >\n                상품 업로드\n            </Button>\n        </div>\n    );\n}\n\nexport default HaderPage;\n","export const API_URL =\n  process.env.NODE_ENV === \"production\"\n    ? \"https://grab-market-server.herokuapp.com\"\n    : \"http://54.180.85.56:8088\";\n","import { Link } from \"react-router-dom\";\nimport dayjs from \"dayjs\";\nimport \"dayjs/locale/ko\";\nimport relativeTime from \"dayjs/plugin/relativeTime\";\nimport { API_URL } from \"../config/constants\";\ndayjs.extend(relativeTime);\ndayjs.locale(\"ko\");\n\nfunction ProductCard(props) {\n  const product = props.product;\n  return (\n    <div className=\"product-card\">\n      {product.soldout === 1 && <div className=\"product-blur\" />}\n      <Link\n        style={{ color: \"inherit\" }}\n        className=\"product-link\"\n        to={`/products/${product.id}`}\n      >\n        <div>\n          <img className=\"product-img\" src={`${API_URL}/${product.imageUrl}`} />\n        </div>\n        <div className=\"product-contents\">\n          <span className=\"product-name\">{product.name}</span>\n          <span className=\"product-price\">{product.price}원</span>\n          <div className=\"product-footer\">\n            <div className=\"product-seller\">\n              <img className=\"product-avatar\" src=\"/images/icons/avatar.png\" />\n              <span>{product.seller}</span>\n            </div>\n            <span className=\"product-date\">\n              {dayjs(product.createdAt).fromNow()}\n            </span>\n          </div>\n        </div>\n      </Link>\n    </div>\n  );\n}\n\nexport default ProductCard;\n","import React from \"react\";\nimport \"./index.css\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport dayjs from \"dayjs\";\nimport relativeTime from \"dayjs/plugin/relativeTime\";\nimport { API_URL } from \"../config/constants.js\";\nimport { Carousel, Spin } from \"antd\";\nimport \"dayjs/locale/ko\";\nimport ProductCard from \"../components/productCard\";\n\ndayjs.extend(relativeTime);\ndayjs.locale(\"ko\");\n\nfunction MainPage() {\n  const [products, setProducts] = React.useState([]);\n  const [banners, setBanners] = React.useState([]);\n  React.useEffect(function () {\n    axios\n      .get(`${API_URL}/products`)\n      .then(function (result) {\n        const products = result.data.products;\n        setProducts(products);\n      })\n      .catch(function (error) {\n        console.error(\"에러 발생 : \", error);\n      });\n\n    axios\n      .get(`${API_URL}/banners`)\n      .then((result) => {\n        const banners = result.data.banners;\n        setBanners(banners);\n      })\n      .catch((error) => {\n        console.error(\"에러 발생 : \", error);\n      });\n  }, []);\n  if (products.length === 0) {\n    return (\n      <div style={{ textAlign: \"center\", paddingTop: 32 }}>\n        <Spin size=\"large\" />\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <Carousel autoplay autoplaySpeed={3000}>\n        {banners.map((banner, index) => {\n          return (\n            <Link to={banner.href}>\n              <div id=\"banner\">\n                <img src={`${API_URL}/${banner.imageUrl}`} />\n              </div>\n            </Link>\n          );\n        })}\n      </Carousel>\n      <h1 id=\"product-headline\">판매되는 상품들</h1>\n      <div id=\"product-list\">\n        {products.map(function (product, index) {\n          return <ProductCard product={product} key={index} />;\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default MainPage;\n","import {\n  Form,\n  Divider,\n  Input,\n  InputNumber,\n  Button,\n  Upload,\n  message,\n} from \"antd\";\nimport \"./index.css\";\nimport { ForkOutlined } from \"@ant-design/icons\";\nimport { useState } from \"react\";\nimport { API_URL } from \"../config/constants\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction UploadPage() {\n  const [imageUrl, setImageUrl] = useState(null);\n  const history = useHistory();\n\n  const onSubmit = (values) => {\n    axios\n      .post(`${API_URL}/products`, {\n        name: values.name,\n        description: values.description,\n        seller: values.seller,\n        price: parseInt(values.price),\n        imageUrl: imageUrl,\n      })\n      .then((result) => {\n        console.log(result);\n        history.replace(\"/\");\n      })\n      .catch((error) => {\n        console.error(error);\n        message.error(`에러가 발생했습니다. ${error.message}`);\n      });\n  };\n  const onChangeImage = (info) => {\n    if (info.file.status === \"uploading\") {\n      return;\n    }\n    if (info.file.status === \"done\") {\n      const response = info.file.response;\n      const imageUrl = response.imageUrl;\n      setImageUrl(imageUrl);\n    }\n  };\n  return (\n    <div id=\"upload-container\">\n      <Form name=\"상품 업로드\" onFinish={onSubmit}>\n        <Form.Item\n          name=\"upload\"\n          label={<div className=\"upload-label\">상품 사진</div>}\n        >\n          <Upload\n            name=\"image\"\n            action={`${API_URL}/image`}\n            listType=\"picture\"\n            showUploadList={false}\n            onChange={onChangeImage}\n          >\n            {imageUrl ? (\n              <img id=\"upload-img\" src={`${API_URL}/${imageUrl}`} />\n            ) : (\n              <div id=\"upload-img-placeholder\">\n                <img src=\"/images/icons/camera.png\" />\n                <span>이미지를 업로드해주세요.</span>\n              </div>\n            )}\n          </Upload>\n        </Form.Item>\n        <Divider />\n        <Form.Item\n          label={<div className=\"upload-label\">판매자 명</div>}\n          name=\"seller\"\n          rules={[{ required: true, message: \"판매자 이름을 입력해주세요\" }]}\n        >\n          <Input\n            className=\"upload-name\"\n            size=\"large\"\n            placeholder=\"이름을 입력해주세요.\"\n          />\n        </Form.Item>\n        <Divider />\n        <Form.Item\n          name=\"name\"\n          label={<div className=\"upload-label\">상품 이름</div>}\n          rules={[{ required: true, message: \"상품 이름을 입력해주세요\" }]}\n        >\n          <Input\n            className=\"upload-name\"\n            size=\"large\"\n            placeholder=\"상품 이름을 입력해주세요\"\n          />\n        </Form.Item>\n        <Divider />\n        <Form.Item\n          name=\"price\"\n          label={<div className=\"upload-label\">상품 가격</div>}\n          rules={[{ required: true, message: \"상품 가격을 입력해주세요\" }]}\n        >\n          <InputNumber defaultValue={0} className=\"upload-price\" size=\"large\" />\n        </Form.Item>\n        <Divider />\n        <Form.Item\n          name=\"description\"\n          label={<div className=\"upload-label\">상품 소개</div>}\n          rules={[{ required: true, message: \"상품 소개를 입력해주세요.\" }]}\n        >\n          <Input.TextArea\n            size=\"large\"\n            id=\"product-description\"\n            showCount\n            maxLength={300}\n            placeholder=\"상품 소개를 적어주세요.\"\n          />\n        </Form.Item>\n        <Form.Item>\n          <Button id=\"submit-button\" size=\"large\" htmlType=\"submit\">\n            상품 등록하기\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n}\n\nexport default UploadPage;\n","import { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport \"./index.css\";\nimport { API_URL } from \"../config/constants\";\nimport dayjs from \"dayjs\";\nimport { Button, message, Spin } from \"antd\";\nimport ProductCard from \"../components/productCard\";\n\nfunction ProductPage() {\n  const { id } = useParams();\n  const [product, setProduct] = useState(null);\n  const [products, setProducts] = useState([]);\n  const getProduct = () => {\n    axios\n      .get(`${API_URL}/products/${id}`)\n      .then((result) => {\n        setProduct(result.data.product);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n  const getRecommendations = () => {\n    axios\n      .get(`${API_URL}/products/${id}/recommendation`)\n      .then((result) => {\n        setProducts(result.data.products);\n        console.log(result.data.products);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n  useEffect(() => {\n    getProduct();\n    getRecommendations();\n  }, [id]);\n\n  if (product === null) {\n    return (\n      <div style={{ textAlign: \"center\", paddingTop: 32 }}>\n        <Spin size=\"large\" />\n      </div>\n    );\n  }\n\n  const onClickPurchase = () => {\n    axios\n      .post(`${API_URL}/purchase/${id}`)\n      .then((result) => {\n        message.info(\"구매가 완료되었습니다\");\n        getProduct();\n      })\n      .catch((error) => {\n        message.error(`에러가 발생했습니다. ${error.message}`);\n      });\n  };\n\n  return (\n    <div>\n      <div id=\"image-box\">\n        <img src={`${API_URL}/${product.imageUrl}`} />\n      </div>\n      <div id=\"profile-box\">\n        <img src=\"/images/icons/avatar.png\" />\n        <span>{product.seller}</span>\n      </div>\n      <div id=\"contents-box\">\n        <div id=\"name\">{product.name}</div>\n        <div id=\"price\">{product.price}원</div>\n        <div id=\"createdAt\">\n          {dayjs(product.createdAt).format(\"YYYY년 MM월 DD일\")}\n        </div>\n        <Button\n          id=\"purchase-button\"\n          size=\"large\"\n          type=\"primary\"\n          danger\n          onClick={onClickPurchase}\n          disabled={product.soldout === 1}\n        >\n          재빨리 구매하기\n        </Button>\n        <div id=\"description-box\">\n          <pre id=\"description\">{product.description} </pre>\n        </div>\n        <div>\n          <h1>추천 상품</h1>\n          <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\n            {products.map((product, index) => {\n              return <ProductCard key={index} product={product} />;\n            })}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ProductPage;\n","import { Link, useHistory } from \"react-router-dom\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { Button } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport \"./App.css\";\nimport HaderPage from \"./HaderPage\";\nimport MainPageComponent from \"./main\";\nimport UploadPage from \"./upload\";\nimport ProductPage from \"./product\";\n\nfunction App() {\n    const history = useHistory();\n    return (\n        <div>\n            <div id=\"header\">\n                <HaderPage />\n            </div>\n            <div id=\"body\">\n                <Switch>\n                    <Route exact={true} path=\"/\">\n                        <MainPageComponent />\n                    </Route>\n                    <Route exact={true} path=\"/products/:id\">\n                        <ProductPage />\n                    </Route>\n                    <Route exact={true} path=\"/upload\">\n                        <UploadPage />\n                    </Route>\n                </Switch>\n            </div>\n            <div id=\"footer\"></div>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}